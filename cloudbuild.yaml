# cloudbuild.yaml
# Este archivo define los pasos para construir, probar y desplegar tu aplicación FastAPI en Google Cloud Run.

steps:
  # Paso 1: Construir la imagen de Docker
  - name: 'gcr.io/cloud-builders/docker'
    id: Build
    args:
      - 'build'
      - '-t'
      - 'gcr.io/${_PROJECT_ID}/user-management-latam-api:${_BUILD_ID}'
      - '-t'
      - 'gcr.io/${_PROJECT_ID}/user-management-latam-api:latest'
      - '.' # El contexto de la construcción es el directorio actual
    volumes:
      - name: 'pip_cache'
        path: '/root/.cache/pip'

  # Paso 2: Ejecutar las pruebas unitarias y de integración
  - name: 'gcr.io/${_PROJECT_ID}/user-management-latam-api:${_BUILD_ID}'
    id: Test
    entrypoint: 'pytest'
    args: ['tests/']
    env:
      - 'SQLALCHEMY_DATABASE_URL=sqlite:///./test.db'
    volumes:
      - name: 'pip_cache'
        path: '/root/.cache/pip'
    allow_failure: true # Esto permite que el build continúe aunque las pruebas fallen

  # Paso 3: Desplegar la aplicación en Google Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Deploy
    args:
      - 'run'
      - 'deploy'
      - 'user-management-api'
      - '--image'
      - 'gcr.io/${_PROJECT_ID}/user-management-latam-api:latest'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--set-env-vars=SQLALCHEMY_DATABASE_URL=postgresql+psycopg2://latamuser:lEONEaLE05.@/latam-api?host=/cloudsql/${_PROJECT_ID}:us-central1:latamapi'

  # Paso 4: Limpiar imágenes Docker antiguas en Container Registry
  - name: 'gcr.io/cloud-builders/gcloud'
    id: Clean-up-images
    entrypoint: bash
    allow_failure: true # Permite que el build continúe si falla la limpieza
    args:
      - '-c'
      - |
        gcloud container images list-tags gcr.io/${_PROJECT_ID}/user-management-latam-api \
          --filter="NOT TAG (latest)" \
          --format='get(digest)' \
          | sed 's/^/gcr.io\/${_PROJECT_ID}\/user-management-latam-api@/' \
          | xargs -r gcloud container images delete --force-delete-tags --quiet

# Define las imágenes que serán creadas y subidas a Container Registry
images:
  - 'gcr.io/${_PROJECT_ID}/user-management-latam-api:${_BUILD_ID}'
  - 'gcr.io/${_PROJECT_ID}/user-management-latam-api:latest'
